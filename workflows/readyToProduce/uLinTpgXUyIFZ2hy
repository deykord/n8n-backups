{
  "active": false,
  "connections": {
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Project Management Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Email Agent": {
      "ai_tool": [
        [
          {
            "node": "Project Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Notion Agent": {
      "ai_tool": [
        [
          {
            "node": "Project Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "ai_tool": [
        [
          {
            "node": "Project Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Project Management Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Project Management Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-24T19:41:13.675Z",
  "id": "uLinTpgXUyIFZ2hy",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Project Manager",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an AI project management assistant integrated with Email, Notion, and Google Calendar. Your responsibilities are as follows:\n\n1. **Notion Integration:**  \n   - Monitor and retrieve updates from our Notion database that tracks all active tasks, deadlines, and project statuses.\n   - Identify any tasks that are overdue or nearing their deadline.\n  - Identify the team member's emails working on those projects\n\n2. **Email Agent Prompt**\nProvide the following structured details to the email agent:  \n\n**Send an email to Team Members (Task Updates Only)**  \n- **Recipients:** [Assigned team members' emails]  \n- **Subject:** \"Task Update: [Task Name]\"  \n- **Key Details:**  \n  - Task name, current status, and deadline.  \n  - Actions required from the team member.  \n  - Any relevant project links or Notion references.  \n\n**Send an email to Project Manager (Weekly Report – Every Thursday)**  \n- **Recipient:** ecommojo@gmail.com  \n- **Subject:** \"Weekly Project Summary – [Week of {{ $now }}]\"  \n- **Key Details:**  \n  - List of completed tasks.  \n  - List of ongoing tasks with progress updates.  \n  - List of overdue tasks and responsible team members.\n  - List of tasks that have not started\n\n3. **Google Calendar Scheduling**  \n- If a follow-up meeting is required, create a calendar invite with:  \n  - **Participants:** Project manager and relevant team members.  \n  - **Description:** Task details, status, and required discussion points.  \n\n## Final Notes  \n- **Do not** write the emails yourself; only provide structured prompts to the email agent.  \n- Ensure notifications are sent only to relevant team members based on their assigned tasks.  \n- The project manager should receive a **weekly summary only**, while team members receive **task-specific alerts**.  \n\n\nCurrent Time: {{ $now }}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        412,
        -120
      ],
      "id": "a76f727e-4ad4-4bc1-a248-8b0d6756d61d",
      "name": "Project Management Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Project Management Agent') }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        380,
        100
      ],
      "id": "d2195390-6c18-41a7-96bc-57491343b01e",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "name": "emailAgent",
        "description": "Call this tool to send emails",
        "workflowId": {
          "__rl": true,
          "value": "d4GpblDG0nNq65WF",
          "mode": "list",
          "cachedResultName": "Project Management AI Agent -  Email Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}"
          },
          "matchingColumns": [
            "query"
          ],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        500,
        100
      ],
      "id": "823e20d3-6f98-43f2-b0a4-35bec9eaf74f",
      "name": "Email Agent"
    },
    {
      "parameters": {
        "name": "NotionAgent",
        "description": "Call this tool to access Notion.",
        "workflowId": {
          "__rl": true,
          "value": "MwgsJCJeej2njedQ",
          "mode": "list",
          "cachedResultName": "Project Management AI Agent -  Notion Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        620,
        100
      ],
      "id": "c07b104a-eb6f-4210-8472-87d58ac431f5",
      "name": "Notion Agent"
    },
    {
      "parameters": {
        "name": "calendarAgent",
        "description": "Call this tool to access Google Calendar\n",
        "workflowId": {
          "__rl": true,
          "value": "6M6LPyJPsGD9qBMV",
          "mode": "list",
          "cachedResultName": "Project Management AI Agent -  Calender Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        740,
        100
      ],
      "id": "b27e49a3-cc4f-4913-95ee-75a336f1b06a",
      "name": "Calendar Agent"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        60,
        -120
      ],
      "id": "2cbd9472-1995-4994-9d03-b963913982b2",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        220,
        100
      ],
      "id": "71e918bc-f817-47c7-af6f-466498399ed0",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "JjVBLavsih1HzGHI",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-03-24T18:49:31.119Z",
      "updatedAt": "2025-03-30T23:13:18.599Z",
      "id": "A2T0DKW8S3MAy4Mp",
      "name": "readyToProduce"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-03-26T19:20:04.000Z",
  "versionId": "fd9e7ce1-8e25-4dea-b05d-90c5066de0dd"
}