{
  "active": false,
  "connections": {
    "Get YouTube URL": {
      "main": [
        [
          {
            "node": "YouTube Video ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube Video ID": {
      "main": [
        [
          {
            "node": "Get YouTube Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get YouTube Video": {
      "main": [
        [
          {
            "node": "Youtube transcriptor Rapid API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4o-mini": {
      "ai_languageModel": [
        [
          {
            "node": "Summarize & Analyze Transcript",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Summarize & Analyze Transcript": {
      "main": [
        [
          {
            "node": "Response Object",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Response Object": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Youtube transcriptor Rapid API": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Summarize & Analyze Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Get YouTube URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-27T19:44:26.921Z",
  "id": "rjAmkBNtkz2KHlAZ",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AI-Powered YouTube Video Summarization & Analysis - Telegram Bot",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3ee42e4c-3cee-4934-97e7-64c96b5691ed",
              "name": "youtubeUrl",
              "type": "string",
              "value": "={{ $json.youtubeURL }}"
            }
          ]
        },
        "options": {}
      },
      "id": "274269d9-a293-454f-8c63-01a8a93ad834",
      "name": "Get YouTube URL",
      "type": "n8n-nodes-base.set",
      "position": [
        260,
        -340
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "jsCode": "const extractYoutubeId = (url) => {\n  // Regex pattern that matches both youtu.be and youtube.com URLs\n  const pattern = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n  const match = url.match(pattern);\n  return match ? match[1] : null;\n};\n\n// Input URL from previous node\nconst youtubeUrl = items[0].json.youtubeUrl; // Adjust this based on your workflow\n\n// Process the URL and return the video ID\nreturn [{\n  json: {\n    videoId: extractYoutubeId(youtubeUrl)\n  }\n}];\n"
      },
      "id": "1fcedda9-32c9-4169-a214-283e2a055c6d",
      "name": "YouTube Video ID",
      "type": "n8n-nodes-base.code",
      "position": [
        460,
        -340
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "get",
        "videoId": "={{ $json.videoId }}",
        "options": {}
      },
      "id": "4ccbc8fb-c49f-49de-92d4-b74088bbc11b",
      "name": "Get YouTube Video",
      "type": "n8n-nodes-base.youTube",
      "position": [
        640,
        -340
      ],
      "typeVersion": 1,
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "jMoAVqGpJeHi05ZS",
          "name": "YouTube account - kfamirosein@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "5fded56a-8302-4e98-abc0-f6688381d1ef",
      "name": "gpt-4o-mini",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1200,
        -140
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "ug5TFYIx7BmAK7H8",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Please analyze the given text and create a structured summary following these guidelines:\n\n1. Break down the content into main topics using Level 2 headers (##)\n2. Under each header:\n   - List only the most essential concepts and key points\n   - Use bullet points for clarity\n   - Keep explanations concise\n   - Preserve technical accuracy\n   - Highlight key terms in bold\n3. Organize the information in this sequence:\n   - Definition/Background\n   - Main characteristics\n   - Implementation details\n   - Advantages/Disadvantages\n4. Format requirements:\n   - Use markdown formatting\n   - Keep bullet points simple (no nesting)\n   - Bold important terms using **term**\n   - Use tables for comparisons\n   - Include relevant technical details\n\nPlease provide a clear, structured summary that captures the core concepts while maintaining technical accuracy.\n\nHere is the text: {{ $json.mergedText }}"
      },
      "id": "67d8344f-c6fd-43c9-a600-216dfb136532",
      "name": "Summarize & Analyze Transcript",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        1200,
        -340
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bf132004-6636-411f-9d85-0c696fda84c4",
              "name": "summary",
              "type": "string",
              "value": "={{ $json.text }}"
            },
            {
              "id": "63c8d0e3-685c-488a-9b45-363cf52479ea",
              "name": "topics",
              "type": "array",
              "value": "=[]"
            },
            {
              "id": "171f30cf-34e9-42f3-8735-814024bfde0b",
              "name": "title",
              "type": "string",
              "value": "={{ $('Get YouTube Video').item.json.snippet.title }}"
            },
            {
              "id": "7f26f5a3-e695-49d1-b1e8-9260c31f1b3d",
              "name": "description",
              "type": "string",
              "value": "={{ $('Get YouTube Video').item.json.snippet.description }}"
            },
            {
              "id": "d0594232-cb39-453c-b015-3b039c098e1f",
              "name": "id",
              "type": "string",
              "value": "={{ $('Get YouTube Video').item.json.id }}"
            },
            {
              "id": "17b6ca08-ce89-4467-bd25-0d2d182f7a8b",
              "name": "youtubeUrl",
              "type": "string",
              "value": "={{ $('Get YouTube URL').item.json.youtubeUrl }}"
            }
          ]
        },
        "options": {}
      },
      "id": "653ec359-cfaf-4c37-923e-afa380e323f5",
      "name": "Response Object",
      "type": "n8n-nodes-base.set",
      "position": [
        1540,
        -340
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "url": "=https://youtube-transcripts.p.rapidapi.com/youtube/transcript?url={{ $('Get YouTube URL').item.json.youtubeUrl }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-RapidAPI-Host",
              "value": "youtube-transcripts.p.rapidapi.com"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        820,
        -340
      ],
      "id": "9d4ab7e7-9a6f-4e9a-b66f-2508fd859997",
      "name": "Youtube transcriptor Rapid API",
      "credentials": {
        "httpHeaderAuth": {
          "id": "5WFOvQCyl7AMmlJU",
          "name": "Rapid API"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "=Video title: {{ $json.title }}\nVideo URL: {{ $json.youtubeUrl }}\nSummary: \n{{ $json.summary }}\n\nVideo ID : {{ $json.id }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "07eeebed-afb7-4e4b-ae84-1ebb83d2bb5e",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1720,
        -340
      ],
      "typeVersion": 1.2,
      "webhookId": "428c05a5-7e76-4681-8830-e7ba288566fd",
      "credentials": {
        "telegramApi": {
          "id": "i0u3hCZwHwGZwLil",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Access the 'content' array from the previous node's output\nconst content = $json.content;\n\n// Merge all 'text' values into one string with spaces\nconst mergedText = content.map(item => item.text).join(' ');\n\n// Return the merged text as output\nreturn [{\n  json: {\n    mergedText\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1000,
        -340
      ],
      "id": "acdbe6d7-98ff-4d5c-afe6-c122a7efa85e",
      "name": "Code"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {
          "chatIds": "=824571286"
        }
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -100,
        -340
      ],
      "id": "f22943cd-2990-463b-8f61-a6be9e71bbe5",
      "name": "Telegram Trigger",
      "webhookId": "ff79aa8c-c450-4dee-b2fc-7c49e1234174",
      "credentials": {
        "telegramApi": {
          "id": "i0u3hCZwHwGZwLil",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "eb66b460-7f76-44d7-91c0-8a6e2b60dbe0",
              "name": "youtubeURL",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        60,
        -340
      ],
      "id": "3c3c0db0-781d-40c7-9b2c-c85fdf7b0164",
      "name": "Edit Fields"
    }
  ],
  "pinData": {},
  "repo_name": null,
  "repo_owner": null,
  "repo_path": null,
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-04-28T18:16:58.775Z",
      "updatedAt": "2025-04-28T18:16:58.775Z",
      "id": "5fWvt038qtjyrogG",
      "name": "Ready For Production"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-05-05T20:42:27.000Z",
  "versionId": "81da81f1-70c5-42d2-be8d-398f415f870f"
}